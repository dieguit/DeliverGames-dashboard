"use strict";var precacheConfig=[["/dashboard/index.html","92cc961ebfa0ea8a3a26af884f2f708d"],["/dashboard/static/css/main.7c206d0f.css","120a5660509b1885d0b64fb56bc1b2ee"],["/dashboard/static/js/main.eb836b91.js","70c7f0ed924e707e9d9c5689f164052e"],["/dashboard/static/media/GraphQLLanguageService.js.fa07138d.flow","fa07138d73e79718e85a092462e8d75a"],["/dashboard/static/media/Logo180.f0194df9.png","f0194df979fc57908b0823970bbb142f"],["/dashboard/static/media/autocompleteUtils.js.4ce7ba19.flow","4ce7ba191f7ebee4426768f246b2f0e0"],["/dashboard/static/media/flags.9c74e172.png","9c74e172f87984c48ddf5c8108cabe67"],["/dashboard/static/media/getAutocompleteSuggestions.js.5f735c7b.flow","5f735c7b32243064f3bd1e416cb3e393"],["/dashboard/static/media/getDefinition.js.0c48668e.flow","0c48668e93256ede6063a998178626c1"],["/dashboard/static/media/getDiagnostics.js.889c0b27.flow","889c0b278692b77ce63f49f1150227c2"],["/dashboard/static/media/getOutline.js.458a3518.flow","458a3518255745f2de5b5238bba05ba1"],["/dashboard/static/media/icons.263bfe56.eot","263bfe56755cefdc9e6c3d8070e0868d"],["/dashboard/static/media/icons.27c88389.woff2","27c88389f00e0d8bfeebebae81f240b6"],["/dashboard/static/media/icons.7bc63d50.woff","7bc63d50d4158c6bfd4b30a99c9f9460"],["/dashboard/static/media/icons.b42b4467.svg","b42b446772f84a277ee29a0615b38800"],["/dashboard/static/media/icons.d3490a32.ttf","d3490a32350db6c9c41e69cc9ce99cd0"],["/dashboard/static/media/index.js.641230f5.flow","641230f56d1ad6b203bb10fc4f55533b"]],cacheName="sw-precache-v3-sw-precache-webpack-plugin-"+(self.registration?self.registration.scope:""),ignoreUrlParametersMatching=[/^utm_/],addDirectoryIndex=function(e,t){var a=new URL(e);return"/"===a.pathname.slice(-1)&&(a.pathname+=t),a.toString()},cleanResponse=function(e){return e.redirected?("body"in e?Promise.resolve(e.body):e.blob()).then(function(t){return new Response(t,{headers:e.headers,status:e.status,statusText:e.statusText})}):Promise.resolve(e)},createCacheKey=function(e,t,a,n){var r=new URL(e);return n&&r.pathname.match(n)||(r.search+=(r.search?"&":"")+encodeURIComponent(t)+"="+encodeURIComponent(a)),r.toString()},isPathWhitelisted=function(e,t){if(0===e.length)return!0;var a=new URL(t).pathname;return e.some(function(e){return a.match(e)})},stripIgnoredUrlParameters=function(e,t){var a=new URL(e);return a.hash="",a.search=a.search.slice(1).split("&").map(function(e){return e.split("=")}).filter(function(e){return t.every(function(t){return!t.test(e[0])})}).map(function(e){return e.join("=")}).join("&"),a.toString()},hashParamName="_sw-precache",urlsToCacheKeys=new Map(precacheConfig.map(function(e){var t=e[0],a=e[1],n=new URL(t,self.location),r=createCacheKey(n,hashParamName,a,/\.\w{8}\./);return[n.toString(),r]}));function setOfCachedUrls(e){return e.keys().then(function(e){return e.map(function(e){return e.url})}).then(function(e){return new Set(e)})}self.addEventListener("install",function(e){e.waitUntil(caches.open(cacheName).then(function(e){return setOfCachedUrls(e).then(function(t){return Promise.all(Array.from(urlsToCacheKeys.values()).map(function(a){if(!t.has(a)){var n=new Request(a,{credentials:"same-origin"});return fetch(n).then(function(t){if(!t.ok)throw new Error("Request for "+a+" returned a response with status "+t.status);return cleanResponse(t).then(function(t){return e.put(a,t)})})}}))})}).then(function(){return self.skipWaiting()}))}),self.addEventListener("activate",function(e){var t=new Set(urlsToCacheKeys.values());e.waitUntil(caches.open(cacheName).then(function(e){return e.keys().then(function(a){return Promise.all(a.map(function(a){if(!t.has(a.url))return e.delete(a)}))})}).then(function(){return self.clients.claim()}))}),self.addEventListener("fetch",function(e){if("GET"===e.request.method){var t,a=stripIgnoredUrlParameters(e.request.url,ignoreUrlParametersMatching),n="index.html";(t=urlsToCacheKeys.has(a))||(a=addDirectoryIndex(a,n),t=urlsToCacheKeys.has(a));var r="/dashboard/index.html";!t&&"navigate"===e.request.mode&&isPathWhitelisted(["^(?!\\/__).*"],e.request.url)&&(a=new URL(r,self.location).toString(),t=urlsToCacheKeys.has(a)),t&&e.respondWith(caches.open(cacheName).then(function(e){return e.match(urlsToCacheKeys.get(a)).then(function(e){if(e)return e;throw Error("The cached response that was expected is missing.")})}).catch(function(t){return console.warn('Couldn\'t serve response for "%s" from cache: %O',e.request.url,t),fetch(e.request)}))}});